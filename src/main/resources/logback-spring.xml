<?xml version="1.0" encoding="UTF-8"?>
<!-- 60초마다 설정 파일의 변경을 확인 하여 변경시 갱신 -->
<configuration scan="true" scanPeriod="60 seconds">

    <!--Environment 내의 프로퍼티들을 개별적으로 설정할 수도 있다.-->
<!--     <springProperty scope="context" name="LOG_LEVEL" value="$logging.level.root" source="logging.level.root"/> -->

    <!-- err log file name -->
    <property name="LOG_LEVEL" value="${LOG_LEVEL}"/>
	<property name="LOG_FILE" value="${LOG_FILE}"/>
	<property name="LOG_PATH" value="${LOG_PATH}"/>
	<property name="CONSOLE_LOG_PATTERN" value="${CONSOLE_LOG_PATTERN}"/>
	<property name="FILE_LOG_PATTERN" value="${FILE_LOG_PATTERN}"/>
	<property name="LOGBACK_ROLLINGPOLICY_MAX_HISTORY" value="${LOGBACK_ROLLINGPOLICY_MAX_HISTORY}"/>

    <property name="ERR_LOG_FILE" value="${LOG_FILE}_error"/>
    <!-- pattern -->
<!--     <property name="LOG_PATTERN" value="[%-5level] - [%d{yy-MM-dd HH:mm:ss.SSS}] - [%thread] - [%X{traceId}] - [%logger{0}:%line] - %msg%n"/> -->
<!-- <property name="LOG_PATTERN" value="[%.-1level][%-19.19d{yyMMdd HH:mm:ss.SSS}][%-21.21thread]- [%X{traceId}] - [%-4X{req.method} %X{req.requestURI}][%-60.60c][%-20.20M:%4.4line] - %msg%n"/> -->

    <!-- Console Appender -->
    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>${CONSOLE_LOG_PATTERN}</pattern>
        </encoder>
    </appender>

   <appender name="MASK" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="ch.qos.logback.core.encoder.LayoutWrappingEncoder">
           <layout class="com.lottecard.myd.be.MaskingPatternLayout">
               <maskPattern>(\w+@\w+\.\w+)</maskPattern> Email pattern
               <pattern>%-5p [%d{ISO8601,UTC}] [%thread] %c: %m%n%rootException</pattern>
            </layout>
        </encoder>
    </appender>

    <!-- File Appender -->
    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 파일경로 설정 -->
        <file>${LOG_PATH}/${LOG_FILE}.log</file>

        <!-- 출력패턴 설정-->
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>${FILE_LOG_PATTERN}</pattern>
        </encoder>

        <!-- Rolling 정책 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- .gz,.zip 등을 넣으면 자동 일자별 로그파일 압축 -->
            <fileNamePattern>${LOG_PATH}/${LOG_FILE}.%d{yyyy-MM-dd_HH}.log</fileNamePattern>
<!--             <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"> -->
                <!-- 파일당 최고 용량 kb, mb, gb -->
<!--                 <maxFileSize>10MB</maxFileSize> -->
<!--             </timeBasedFileNamingAndTriggeringPolicy> -->
            <!-- 일자별 로그파일 최대 보관주기(~일), 해당 설정일 이상된 파일은 자동으로 제거-->
            <maxHistory>${LOGBACK_ROLLINGPOLICY_MAX_HISTORY}</maxHistory>
            <!--<MinIndex>1</MinIndex>
            <MaxIndex>10</MaxIndex>-->
        </rollingPolicy>
    </appender>

    <!-- 에러의 경우 파일에 로그 처리 -->
    <appender name="Error" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>error</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <file>${LOG_PATH}/${ERR_LOG_FILE}.log</file>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>${FILE_LOG_PATTERN}</pattern>
        </encoder>
        <!-- Rolling 정책 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- .gz,.zip 등을 넣으면 자동 일자별 로그파일 압축 -->
            <fileNamePattern>${LOG_PATH}/${ERR_LOG_FILE}.%d{yyyy-MM-dd_HH}.log</fileNamePattern>
<!--             <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP"> -->
                <!-- 파일당 최고 용량 kb, mb, gb -->
<!--                 <maxFileSize>10MB</maxFileSize> -->
<!--             </timeBasedFileNamingAndTriggeringPolicy> -->
            <!-- 일자별 로그파일 최대 보관주기(~일), 해당 설정일 이상된 파일은 자동으로 제거-->
            <maxHistory>${LOGBACK_ROLLINGPOLICY_MAX_HISTORY}</maxHistory>
        </rollingPolicy>
    </appender>

    <springProfile name="default">
      <root level="${LOG_LEVEL}">
        <appender-ref ref="CONSOLE"/>
        <appender-ref ref="FILE"/>
        <appender-ref ref="Error"/>
        <appender-ref ref="MASK"/>
      </root>
    </springProfile>

    <springProfile name="local">
      <root level="${LOG_LEVEL}">
        <appender-ref ref="CONSOLE"/>
        <appender-ref ref="FILE"/>
        <appender-ref ref="Error"/>
        <appender-ref ref="MASK"/>
      </root>
    </springProfile>

    <springProfile name="dev">
      <root level="${LOG_LEVEL}">
        <appender-ref ref="CONSOLE"/>
        <appender-ref ref="FILE"/>
        <appender-ref ref="Error"/>
        <appender-ref ref="MASK"/>
      </root>
    </springProfile>

    <springProfile name="prod">
      <root level="${LOG_LEVEL}">
        <appender-ref ref="FILE"/>
        <appender-ref ref="Error"/>
      </root>
    </springProfile>

    <springProfile name="cbo">
      <root level="${LOG_LEVEL}">
        <appender-ref ref="CONSOLE"/>
        <appender-ref ref="FILE"/>
        <appender-ref ref="Error"/>
      </root>
    </springProfile>

    <!-- root레벨 설정
    <root level="${LOG_LEVEL}">
        <appender-ref ref="CONSOLE"/>
        <appender-ref ref="FILE"/>
        <appender-ref ref="Error"/>
        <appender-ref ref="MASK"/>
    </root> -->

    <!-- 특정패키지 로깅레벨 설정 -->
    <logger name="org.apache.ibatis" level="DEBUG" additivity="false">
        <appender-ref ref="CONSOLE"/>
        <appender-ref ref="FILE"/>
<!-- 		<appender-ref ref="${log.config.type}"/> -->
        <appender-ref ref="Error"/>
        <appender-ref ref="MASK"/>
    </logger>
</configuration>